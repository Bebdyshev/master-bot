#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π
"""
import sys
import os

# Add src to path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from agents.support_agent import StudentSupportAgent
import json


def print_separator():
    print("\n" + "=" * 70 + "\n")


def print_message(role: str, content: str):
    emoji = "üë§" if role == "user" else "ü§ñ"
    print(f"{emoji} {role.upper()}: {content}\n")


def test_conversation_flow():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å —É—Ç–æ—á–Ω–µ–Ω–∏–µ–º –¥–µ—Ç–∞–ª–µ–π
    """
    print("üéØ –¢–ï–°–¢: –ü—Ä–æ—Ü–µ—Å—Å —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º —Ç–∏–∫–µ—Ç–∞")
    print_separator()
    
    agent = StudentSupportAgent(student_id="TEST123")
    
    # –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞
    history = []
    
    # –®–∞–≥ 1: –°—Ç—É–¥–µ–Ω—Ç –æ–ø–∏—Å—ã–≤–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É –∫—Ä–∞—Ç–∫–æ
    print("üìù –°—Ü–µ–Ω–∞—Ä–∏–π: –°—Ç—É–¥–µ–Ω—Ç –∫—Ä–∞—Ç–∫–æ –æ–ø–∏—Å—ã–≤–∞–µ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø—Ä–æ–±–ª–µ–º—É")
    print_separator()
    
    user_msg_1 = "–ù–µ –º–æ–≥—É –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É"
    print_message("–°—Ç—É–¥–µ–Ω—Ç", user_msg_1)
    
    result_1 = agent.chat(user_msg_1, chat_history=history)
    print_message("AI", result_1["response"])
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∏–∫–µ—Ç –ù–ï —Å–æ–∑–¥–∞–Ω –Ω–∞ –ø–µ—Ä–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
    if result_1.get("ticket"):
        print("‚ùå –û–®–ò–ë–ö–ê: –¢–∏–∫–µ—Ç —Å–æ–∑–¥–∞–Ω —Å–ª–∏—à–∫–æ–º —Ä–∞–Ω–æ! AI –¥–æ–ª–∂–µ–Ω —Å–Ω–∞—á–∞–ª–∞ —É—Ç–æ—á–Ω–∏—Ç—å –¥–µ—Ç–∞–ª–∏.")
    else:
        print("‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: AI –∑–∞–¥–∞–µ—Ç —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –≤–º–µ—Å—Ç–æ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–∞")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
    history.append({"role": "user", "content": user_msg_1})
    history.append({"role": "assistant", "content": result_1["response"]})
    
    print_separator()
    
    # –®–∞–≥ 2: –°—Ç—É–¥–µ–Ω—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–µ—Ç–∞–ª–∏
    print("üìù –°—Ç—É–¥–µ–Ω—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é")
    print_separator()
    
    user_msg_2 = """–ü–∏—à–µ—Ç –æ—à–∏–±–∫—É '–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å', —Ö–æ—Ç—è —è —Ç–æ—á–Ω–æ 
–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–æ–∂—É. –ù–∞—á–∞–ª–æ—Å—å —Å–µ–≥–æ–¥–Ω—è —É—Ç—Ä–æ–º –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è. –ü–∞—Ä–æ–ª—å –Ω–µ —Å–±—Ä–∞—Å—ã–≤–∞–ª, 
–∫—ç—à –æ—á–∏—â–∞–ª - –Ω–µ –ø–æ–º–æ–≥–ª–æ."""
    
    print_message("–°—Ç—É–¥–µ–Ω—Ç", user_msg_2)
    
    result_2 = agent.chat(user_msg_2, chat_history=history)
    print_message("AI", result_2["response"])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
    history.append({"role": "user", "content": user_msg_2})
    history.append({"role": "assistant", "content": result_2["response"]})
    
    print_separator()
    
    # –®–∞–≥ 3: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–∞
    if "—Å–æ–∑–¥–∞—Ç—å" in result_2["response"].lower() or "—Ç–∏–∫–µ—Ç" in result_2["response"].lower():
        print("üìù AI –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Å–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç, —Å—Ç—É–¥–µ–Ω—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç")
        print_separator()
        
        user_msg_3 = "–î–∞, —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ —Ç–∏–∫–µ—Ç"
        print_message("–°—Ç—É–¥–µ–Ω—Ç", user_msg_3)
        
        result_3 = agent.chat(user_msg_3, chat_history=history)
        print_message("AI", result_3["response"])
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞
        if result_3.get("ticket"):
            print("\n‚úÖ –£–°–ü–ï–•: –¢–∏–∫–µ—Ç —Å–æ–∑–¥–∞–Ω —Å –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π!")
            print("\nüìã –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –¢–ò–ö–ï–¢–ï:")
            print(json.dumps(result_3["ticket"], indent=2, ensure_ascii=False))
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ—Å—Ç—å –æ–ø–∏—Å–∞–Ω–∏—è
            description = result_3["ticket"].get("description", "")
            if len(description) > 50:
                print("\n‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–µ (–±–æ–ª—å—à–µ 50 —Å–∏–º–≤–æ–ª–æ–≤)")
            else:
                print("\n‚ö†Ô∏è –û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ")
        else:
            print("\n‚ö†Ô∏è –¢–∏–∫–µ—Ç –≤—Å–µ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω")
    
    print_separator()


def test_simple_question():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –ø—Ä–æ—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã –Ω–µ —Ç—Ä–µ–±—É—é—Ç —É—Ç–æ—á–Ω–µ–Ω–∏—è
    """
    print("üéØ –¢–ï–°–¢: –ü—Ä–æ—Å—Ç–æ–π –≤–æ–ø—Ä–æ—Å (–±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–∞)")
    print_separator()
    
    agent = StudentSupportAgent(student_id="TEST456")
    
    user_msg = "–ö–∞–∫–∏–µ —É –º–µ–Ω—è –æ—Ü–µ–Ω–∫–∏?"
    print_message("–°—Ç—É–¥–µ–Ω—Ç", user_msg)
    
    result = agent.chat(user_msg, chat_history=[])
    print_message("AI", result["response"])
    
    if result.get("ticket"):
        print("\n‚ùå –û–®–ò–ë–ö–ê: –¢–∏–∫–µ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞!")
    else:
        print("\n‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: –¢–∏–∫–µ—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω, –¥–∞–Ω –ø—Ä—è–º–æ–π –æ—Ç–≤–µ—Ç")
    
    print_separator()


def test_document_request_flow():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—Ä–æ—Å–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Å —É—Ç–æ—á–Ω–µ–Ω–∏–µ–º
    """
    print("üéØ –¢–ï–°–¢: –ó–∞–ø—Ä–æ—Å –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Å —É—Ç–æ—á–Ω–µ–Ω–∏–µ–º –¥–µ—Ç–∞–ª–µ–π")
    print_separator()
    
    agent = StudentSupportAgent(student_id="TEST789")
    history = []
    
    # –®–∞–≥ 1: –ö—Ä–∞—Ç–∫–∏–π –∑–∞–ø—Ä–æ—Å
    user_msg_1 = "–ú–Ω–µ –Ω—É–∂–Ω–∞ —Å–ø—Ä–∞–≤–∫–∞"
    print_message("–°—Ç—É–¥–µ–Ω—Ç", user_msg_1)
    
    result_1 = agent.chat(user_msg_1, chat_history=history)
    print_message("AI", result_1["response"])
    
    if result_1.get("ticket"):
        print("‚ùå –û–®–ò–ë–ö–ê: –¢–∏–∫–µ—Ç —Å–æ–∑–¥–∞–Ω –±–µ–∑ —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π!")
    else:
        print("‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: AI –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –¥–µ—Ç–∞–ª–∏ –æ —Ç–∏–ø–µ —Å–ø—Ä–∞–≤–∫–∏")
    
    history.append({"role": "user", "content": user_msg_1})
    history.append({"role": "assistant", "content": result_1["response"]})
    
    print_separator()
    
    # –®–∞–≥ 2: –î–µ—Ç–∞–ª–∏
    user_msg_2 = "–°–ø—Ä–∞–≤–∫–∞ –æ–± –æ–±—É—á–µ–Ω–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã, –Ω—É–∂–Ω–∞ —Å—Ä–æ—á–Ω–æ"
    print_message("–°—Ç—É–¥–µ–Ω—Ç", user_msg_2)
    
    result_2 = agent.chat(user_msg_2, chat_history=history)
    print_message("AI", result_2["response"])
    
    if result_2.get("ticket"):
        print("\n‚úÖ –¢–∏–∫–µ—Ç —Å–æ–∑–¥–∞–Ω —Å –¥–µ—Ç–∞–ª—è–º–∏:")
        print(json.dumps(result_2["ticket"], indent=2, ensure_ascii=False))
    
    print_separator()


def main():
    print("\n" + "üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–¶–ï–°–°–ê –£–¢–û–ß–ù–ï–ù–ò–Ø ".center(70, "="))
    print("\n")
    
    try:
        # –¢–µ—Å—Ç 1: –ü–æ–ª–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å —É—Ç–æ—á–Ω–µ–Ω–∏–µ–º
        test_conversation_flow()
        
        # –¢–µ—Å—Ç 2: –ü—Ä–æ—Å—Ç–æ–π –≤–æ–ø—Ä–æ—Å
        test_simple_question()
        
        # –¢–µ—Å—Ç 3: –ó–∞–ø—Ä–æ—Å –¥–æ–∫—É–º–µ–Ω—Ç–∞
        test_document_request_flow()
        
        print("\n" + "‚úÖ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´ ".center(70, "="))
        print("\n")
        
        print("üìä –í–´–í–û–î–´:")
        print("1. AI –¥–æ–ª–∂–µ–Ω –∑–∞–¥–∞–≤–∞—Ç—å —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º —Ç–∏–∫–µ—Ç–∞")
        print("2. –ü—Ä–æ—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–æ–ª–∂–Ω—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–∞")
        print("3. –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ç–∏–∫–µ—Ç—ã —Å–æ–∑–¥–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Å–±–æ—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
        print("4. –°—Ç—É–¥–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞")
        
    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê –ü–†–ò –í–´–ü–û–õ–ù–ï–ù–ò–ò –¢–ï–°–¢–û–í:\n{str(e)}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    main()
