"""
AI Agent Tools for MasterEducation Support
Tools for SAT/IELTS preparation platform and university admission support
"""
from langchain.tools import tool
from typing import Optional
import httpx
from src.agents.business_tools import BUSINESS_TOOLS

# Import business-specific tools
from src.agents.business_tools import BUSINESS_TOOLS


@tool
def submit_technical_issue(description: str, student_id: str) -> str:
    """
    –°–æ–∑–¥–∞–µ—Ç —Ç–∏–∫–µ—Ç –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–±–ª–µ–º—ã.
    
    ‚ö†Ô∏è –í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¢–û–õ–¨–ö–û –ü–û–°–õ–ï —Ç–æ–≥–æ, –∫–∞–∫:
    1. –ó–∞–¥–∞–ª —Å—Ç—É–¥–µ–Ω—Ç—É —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –æ –ø—Ä–æ–±–ª–µ–º–µ
    2. –ü–æ–ª—É—á–∏–ª –¥–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (—á—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∫–∞–∫–∏–µ –æ—à–∏–±–∫–∏, –∫–æ–≥–¥–∞ –≤–æ–∑–Ω–∏–∫–ª–æ)
    3. –°—Ç—É–¥–µ–Ω—Ç –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª, —á—Ç–æ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    
    –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π —Å—Ä–∞–∑—É –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–±–ª–µ–º—ã!
    
    –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–≥–¥–∞ —Å—Ç—É–¥–µ–Ω—Ç:
    - –î–µ—Ç–∞–ª—å–Ω–æ –æ–ø–∏—Å–∞–ª —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø—Ä–æ–±–ª–µ–º—É
    - –ü–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –≤—Å–µ –¥–µ—Ç–∞–ª–∏
    - –ì–æ—Ç–æ–≤ —Å–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É
    
    Args:
        description: –ü–û–î–†–û–ë–ù–û–ï –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å–æ –≤—Å–µ–º–∏ –¥–µ—Ç–∞–ª—è–º–∏ –æ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞
        student_id: ID —Å—Ç—É–¥–µ–Ω—Ç–∞
    
    Returns:
        –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º —Ç–∏–∫–µ—Ç–µ –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ
    """
    import json
    from datetime import datetime
    
    # Ensure student_id is string
    student_id = str(student_id) if student_id else "unknown"
    
    # Generate ticket ID
    ticket_id = f"TECH-{abs(hash(description + student_id)) % 10000:04d}"
    
    # Determine priority based on keywords
    priority = "medium"
    if any(word in description.lower() for word in ["–Ω–µ –º–æ–≥—É –≤–æ–π—Ç–∏", "—Å—Ä–æ—á–Ω–æ", "–≤–∞–∂–Ω–æ", "–∫—Ä–∏—Ç–∏—á–Ω–æ"]):
        priority = "high"
    elif any(word in description.lower() for word in ["–≤–æ–ø—Ä–æ—Å", "—É—Ç–æ—á–Ω–∏—Ç—å", "–ø–æ–º–æ—â—å"]):
        priority = "low"
    
    # Create ticket data
    ticket_data = {
        "ticket_id": ticket_id,
        "type": "technical",
        "status": "open",
        "priority": priority,
        "description": description,
        "student_id": student_id,
        "created_at": datetime.now().isoformat(),
        "estimated_response": "24 —á–∞—Å–∞" if priority != "high" else "4 —á–∞—Å–∞"
    }
    
    # Return structured response with ticket data
    return json.dumps({
        "success": True,
        "message": f"‚úÖ –¢–∏–∫–µ—Ç #{ticket_id} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n\n–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ –≤ —Ä–∞–±–æ—Ç—É. –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ {ticket_data['estimated_response']}.\n\n–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã: {description}\n–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {priority}",
        "ticket": ticket_data
    }, ensure_ascii=False)


@tool
def request_document(document_type: str, student_id: str) -> str:
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç.
    
    ‚ö†Ô∏è –í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û –ü–û–°–õ–ï —É—Ç–æ—á–Ω–µ–Ω–∏—è:
    1. –î–ª—è –∫–∞–∫–æ–π —Ü–µ–ª–∏ –Ω—É–∂–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç
    2. –í –∫–∞–∫–∏–µ —Å—Ä–æ–∫–∏ –Ω—É–∂–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç
    3. –ï—Å—Ç—å –ª–∏ –æ—Å–æ–±—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
    
    –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–≥–¥–∞ —Å—Ç—É–¥–µ–Ω—Ç:
    - –¢–æ—á–Ω–æ —É–∫–∞–∑–∞–ª —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞
    - –ü–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –¥–µ—Ç–∞–ª–∏ –∑–∞–ø—Ä–æ—Å–∞
    
    Args:
        document_type: –¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞ (—Å–ø—Ä–∞–≤–∫–∞, –≤—ã–ø–∏—Å–∫–∞, etc)
        student_id: ID —Å—Ç—É–¥–µ–Ω—Ç–∞
    
    Returns:
        –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–ø—Ä–æ—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ
    """
    import json
    from datetime import datetime
    
    # Ensure student_id is string
    student_id = str(student_id) if student_id else "unknown"
    
    # Generate ticket ID
    ticket_id = f"DOC-{abs(hash(document_type + student_id)) % 10000:04d}"
    
    # Create ticket data
    ticket_data = {
        "ticket_id": ticket_id,
        "type": "document",
        "status": "open",
        "priority": "low",
        "description": f"–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {document_type}",
        "student_id": student_id,
        "created_at": datetime.now().isoformat(),
        "estimated_response": "3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω—è"
    }
    
    return json.dumps({
        "success": True,
        "message": f"üìÑ –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ '{document_type}' –ø—Ä–∏–Ω—è—Ç.\n\n–¢–∏–∫–µ—Ç #{ticket_id} —Å–æ–∑–¥–∞–Ω.\n–î–æ–∫—É–º–µ–Ω—Ç –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ –≤ —Ç–µ—á–µ–Ω–∏–µ 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.\n–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞ email.",
        "ticket": ticket_data
    }, ensure_ascii=False)
@tool  
def contact_teacher(teacher_name: str, subject: str, message: str, student_id: str) -> str:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é.
    
    ‚ö†Ô∏è –í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û –ü–û–°–õ–ï —É—Ç–æ—á–Ω–µ–Ω–∏—è:
    1. –ò–º—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–µ–¥–º–µ—Ç
    2. –°—É—Ç—å –≤–æ–ø—Ä–æ—Å–∞ –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã
    3. –ö–æ–Ω—Ç–µ–∫—Å—Ç (–∑–∞–¥–∞–Ω–∏–µ, –ª–µ–∫—Ü–∏—è, —Ç–µ–º–∞)
    
    –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–≥–¥–∞ —Å—Ç—É–¥–µ–Ω—Ç:
    - –ù–∞–∑–≤–∞–ª –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
    - –î–µ—Ç–∞–ª—å–Ω–æ –æ–ø–∏—Å–∞–ª –≤–æ–ø—Ä–æ—Å
    - –ü–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è
    
    Args:
        teacher_name: –ò–º—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
        subject: –ü—Ä–µ–¥–º–µ—Ç
        message: –ü–û–î–†–û–ë–ù–û–ï —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
        student_id: ID —Å—Ç—É–¥–µ–Ω—Ç–∞
    
    Returns:
        –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ
    """
    import json
    from datetime import datetime
    
    # Ensure student_id is string
    student_id = str(student_id) if student_id else "unknown"
    
    # Generate ticket ID
    ticket_id = f"MSG-{abs(hash(message + student_id)) % 10000:04d}"
    
    # Create ticket data
    ticket_data = {
        "ticket_id": ticket_id,
        "type": "teacher-message",
        "status": "open",
        "priority": "medium",
        "description": f"–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è {teacher_name} ({subject}): {message}",
        "student_id": student_id,
        "created_at": datetime.now().isoformat(),
        "estimated_response": "1-2 —Ä–∞–±–æ—á–∏—Ö –¥–Ω—è"
    }
    
    return json.dumps({
        "success": True,
        "message": f"‚úâÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é {teacher_name} ({subject}).\n\n–¢–∏–∫–µ—Ç #{ticket_id} —Å–æ–∑–¥–∞–Ω.\n–í—ã –ø–æ–ª—É—á–∏—Ç–µ –æ—Ç–≤–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 1-2 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.",
        "ticket": ticket_data
    }, ensure_ascii=False)




# –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
TOOLS = [
    # –û–±—â–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
    submit_technical_issue,
    request_document,
    contact_teacher,
] + BUSINESS_TOOLS  # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –±–∏–∑–Ω–µ—Å-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã

